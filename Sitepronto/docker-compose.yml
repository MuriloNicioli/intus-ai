version: "3.7"

services:
  intusai-web:
    # Nome da imagem que será construída
    image: intusai-web:latest
    
    # Constrói a imagem a partir do Dockerfile na raiz do projeto
    build:
      context: .
      dockerfile: Dockerfile

    # Conecta o serviço à sua rede overlay existente
    networks:
      - murilo-net-desenv

    # Configuração de deploy para o Docker Swarm
    deploy:
      mode: replicated
      replicas: 1 # Comece com uma réplica, pode aumentar depois

      # Onde o container deve ser executado (ajuste o hostname conforme sua necessidade)
      placement:
        constraints:
          # Exemplo: - node.role == worker
          - node.hostname == ubuntu-murilo-db # Troque pelo hostname da sua VPS de front-end se for diferente

      # Labels para configuração automática do Traefik
      labels:
        # Habilita o Traefik para este serviço
        - "traefik.enable=true"
        
        # --- Roteador para HTTP ---
        - "traefik.http.routers.intusai-http.rule=Host(`intusai.com.br`)"
        - "traefik.http.routers.intusai-http.entrypoints=web"
        - "traefik.http.routers.intusai-http.middlewares=redirect-to-https@docker"

        # --- Roteador para HTTPS ---
        - "traefik.http.routers.intusai-https.rule=Host(`intusai.com.br`)"
        - "traefik.http.routers.intusai-https.entrypoints=websecure"
        - "traefik.http.routers.intusai-https.tls.certresolver=cloudflare" # Supondo que você usa o certresolver do Cloudflare no Traefik

        # --- Serviço ---
        - "traefik.http.services.intusai.loadbalancer.server.port=80"

# Rede externa já existente no seu Swarm
networks:
  murilo-net-desenv:
    external: true
    name: murilo-net-desenv